name: Test

on:
    push:
        branches: [master]
    pull_request:
        branches: [master]

jobs:

    test:
        runs-on: ${{ matrix.os }}
        defaults:
            run:
                shell: bash -e {0}  # -e to fail on error

        strategy:
            fail-fast: false
            matrix:
                python: ['3.8', '3.10']
                os: [ubuntu-latest, macos-latest]
                project_name: [project_name, alt_name]
        env:
            PROJECT_ROOT: ${{ matrix.project_name }}
            MODULE_NAME: ${{ matrix.project_name|lower|replace('-', '_') }}

        steps:
        -   uses: actions/checkout@v2
        -   name: Set up Python ${{ matrix.python }}
            uses: actions/setup-python@v4
            with:
                python-version: ${{ matrix.python }}
                cache: pip
                cache-dependency-path: '**/pyproject.toml'
        -   name: Install Ubuntu system dependencies
            if: matrix.os == 'ubuntu-latest'
            run: sudo apt-get install pandoc
        -   name: Install dependencies
            run: python -m pip install --upgrade pip wheel cookiecutter pre-commit
        -   name: Build from template
            shell: python
            run: |
                from cookiecutter.main import cookiecutter
                overrides = dict(project_name='${{ matrix.project_name }}')
                cookiecutter('.', no_input=True, extra_context=overrides)
        -   name: Set up pre-commit cache
            uses: actions/cache@v3
            with:
                path: ~/.cache/pre-commit
                key: pre-commit-3|${{ matrix.python }}|${{ hashFiles(format('{0}/.pre-commit-config.yaml', env.PROJECT_ROOT)) }}
        -   name: Run pre-commit
            run: |
                cd "$PROJECT_ROOT"
                git add .
                pre-commit run --color=always --show-diff-on-failure --all-files
        -   name: Install the package
            run: |
                cd "$PROJECT_ROOT"
                pip install '.[doc]'
                python -c 'import ${{ env.MODULE_NAME }}'
        -   name: Build the documentation
            env:
                SPHINXOPTS: -W --keep-going
            run: |
                cd "$PROJECT_ROOT/docs"
                make html
